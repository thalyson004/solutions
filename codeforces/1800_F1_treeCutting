#include <bits/stdc++.h>
using namespace std;

#define oo 1000000000
#define MAXN 1000005
#define all(x) x.begin(),x.end()

int color[MAXN];
vector<int> G[MAXN];
int red, blue;
pair<int,int> dp[MAXN];

int dfs(int v, int father){
   for(int u:G[v]){
      if(u!=father){
         dfs(u, v);
         dp[v].first += dp[u].first;
         dp[v].second += dp[u].second;
      }
   }
   if(color[v]==1) dp[v].first++;
   if(color[v]==2) dp[v].second++;
}

int solve(int n){
      red = blue = 0;
      for(int i = 1; i <= n; i++){
         dp[i]={0,0};
         G[i].clear();
         scanf( "%d", &color[i] );
         red += color[i]==1;
         blue += color[i]==2;
      }
      for(int i = 1; i < n; i++){
         int a, b;
         scanf("%d %d", &a, &b);
         G[b].push_back(a);
         G[a].push_back(b);
      }
      int ans = 0;
      dfs(1,-1);
      for(int i = 2; i <= n; i++){
         if( (dp[i].first==red and !dp[i].second) or
             (dp[i].second==blue and !dp[i].first) ){
            ans++;
         }
      }
      return ans;
}

int main(){
   int n;
   while( scanf("%d", &n) != -1 ) {
      printf("%d\n", solve(n));
   }
}
